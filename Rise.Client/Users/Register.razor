@page "/register"
@using Microsoft.Extensions.Localization
@using Rise.Shared.Enums
@using Rise.Shared.Users
@using Rise.Shared
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IUserService UserService
@inject IStringLocalizer<Register> Localizer;
<link href="css/shared-form.css" rel="stylesheet" />

<PageTitle>@Localizer["Register"]</PageTitle>

<h1 class="form-title">@Localizer["Register"]</h1>

<div class="form-card">

    <EditForm Model="newUser" OnValidSubmit="Submit">
        <DataAnnotationsValidator />
        <div class="form-items">
            <div>
                <label class="form-label" for="FirstName">@Localizer["FirstName"]: </label>
                <InputText class="form-input" id="FirstName" @bind-Value="newUser.FirstName" placeholder="@Localizer["FirstName"]" />
                <ValidationMessage For="@(() => newUser.FirstName)" />
            </div>
            <div>
                <label class="form-label" for="LastName">@Localizer["LastName"]: </label>
                <InputText class="form-input" id="LastName" @bind-Value="newUser.LastName" placeholder="@Localizer["LastName"]" />
                <ValidationMessage For="@(() => newUser.LastName)" />
            </div>
            <div>
                <label class="form-label" for="Email">@Localizer["Email"]: </label>
                <InputText class="form-input" type="email" id="Email" @bind-Value="newUser.Email" placeholder="@Localizer["Email"]" />
                <ValidationMessage For="@(() => newUser.Email)" />
            </div>
            <div>
                <label class="form-label" for="PhoneNumber">@Localizer["PhoneNumber"]: </label>
                <InputText class="form-input" type="tel" id="PhoneNumber" @bind-Value="newUser.PhoneNumber"
                    placeholder="@Localizer["PhoneNumber"]" />
                <ValidationMessage For="@(() => newUser.PhoneNumber)" />
            </div>
            <div>
                <label class="form-label" for="Password">@Localizer["Password"]: </label>
                <InputText class="form-input" type="password" id="Password" @bind-Value="newUser.Password"
                    placeholder="@Localizer["Password"]" />
                <ValidationMessage For="@(() => newUser.Password)" />
            </div>
            <div>
                <label class="form-label" for="ConfirmPassword">@Localizer["ConfirmPassword"]: </label>
                <InputText class="form-input" type="password" id="ConfirmPassword" @bind-Value="confirmPassword"
                    placeholder="@Localizer["ConfirmPassword"]" />
                <ValidationMessage For="@(() => confirmPassword)" />
            </div>
            <div>
                <label class="form-label" for="BirthDate">@Localizer["BirthDate"]: </label>
                <InputDate class="form-input" id="BirthDate" @bind-Value="newUser.BirthDate" />
                <ValidationMessage For="@(() => newUser.BirthDate)" />
            </div>
            <div>
                <label class="form-label" for="Street">@Localizer["SelectAddress"]:</label>
                <InputSelect class="form-input" id="Street" @bind-Value="newUser.Address.Street">
                    @foreach (var street in Enum.GetValues(typeof(StreetEnum)).Cast<StreetEnum>())
                    {
                        <option value="@street">@street.GetStreetName()</option>
                    }
                </InputSelect>
            </div>

            <div class="d-flex flex-row">
                <div class="d-flex flex-column">
                    <div>
                        <label class="form-label-small" for="Address.HouseNumber">@Localizer["HouseNumber"]: </label>
                        <InputText class="form-input-small" id="HouseNumber" @bind-Value="newUser.Address.HouseNumber"
                            placeholder="@Localizer["Nr"]" />
                    </div>
                    <ValidationMessage For="@(() => newUser.Address.HouseNumber)" />
                </div>
                <div>
                    <label class="form-label-small" for="Address.Bus">@Localizer["Bus"]: </label>
                    <InputText class="form-input-small" id="Bus" @bind-Value="newUser.Address.Bus" placeholder="@Localizer["Bus"]" />
                    <ValidationMessage For="@(() => newUser.Address.Bus)" />
                </div>
            </div>

            <span>@Localizer["AlreadyAnAccount"] <a class="form-link" href="login">@Localizer["Login"]</a></span>

            <div class="form-buttons">
                <button class="form-btn btn-primary" type="submit">@Localizer["Register"]</button>
                <button class="form-btn btn-secondary" type="button" @onclick="Cancel">@Localizer["Cancel"]</button>
            </div>
        </div>
    </EditForm>
</div>

@if (isSubmitted)
{
    <div class="form-card">
    <h2>Thank you for registering!</h2>
    <p>@(userCreated ? "Your account has been created successfully." : "Failed to create account.")</p>
    <p>firstname: @newUser.FirstName</p>
    <p>lastname: @newUser.LastName</p>
    <p>email: @newUser.Email</p>
    <p>birthdate: @newUser.BirthDate</p>
    <p>street: @newUser.Address.Street</p>
    <p>house number: @newUser.Address.HouseNumber</p>
    <p>bus: @newUser.Address.Bus</p>
</div>
}

@code {

    private UserDto.CreateUser newUser = new();

    private string? confirmPassword;

    private bool userCreated = false;

    private bool isSubmitted = true;

    private async Task Submit()
    {
        if (newUser.Password != null && newUser.Password != confirmPassword)
        {
            return;
        }
        isSubmitted = true;
        userCreated = await UserService.CreateUserAsync(newUser);
        @* NavigationManager.NavigateTo("/login"); *@
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/login");
    }
}